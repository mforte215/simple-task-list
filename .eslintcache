[{"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\index.js":"1","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\App.js":"2","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\reportWebVitals.js":"3","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\hoc\\Layout\\Layout.js":"4","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\hoc\\Auxillary\\Auxillary.js":"5","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\Toolbar\\Toolbar.js":"6","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\ToDoList.js":"7","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\TaskList\\TaskList.js":"8","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\todo\\Todo.js":"9"},{"size":525,"mtime":1609353445858,"results":"10","hashOfConfig":"11"},{"size":1448,"mtime":1607636058110,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":538,"mtime":1609360895844,"results":"14","hashOfConfig":"11"},{"size":108,"mtime":1609352983935,"results":"15","hashOfConfig":"11"},{"size":228,"mtime":1609353585072,"results":"16","hashOfConfig":"11"},{"size":2972,"mtime":1609434125977,"results":"17","hashOfConfig":"11"},{"size":510,"mtime":1609431751604,"results":"18","hashOfConfig":"11"},{"size":368,"mtime":1609424454108,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v1vbic",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\index.js",[],["42","43"],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\App.js",["44","45"],"import './App.css';\nimport React, { Component } from 'react';\nimport Todo from './components/todo/Todo';\n\nclass App extends Component {\n\n  state = {\n    tasks: [\n     { id: 't1', task: 'Wash the dishes.', assignedDate: '12/10/2020', dueDate: '12/10/2020'},\n     { id: 't2', task: 'Do the laundry.', assignedDate: '12/10/2020', dueDate: '12/11/2020'},\n     { id: 't3', task: 'Fix Profolio.', assignedDate: '12/10/2020', dueDate: '1/1/2021'},\n     { id: 't4', task: 'Buy Presents.', assignedDate: '12/10/2020', dueDate: '12/23/2020'},\n    ]\n}\n\n\nupdateTaskHandler = (event, taskId) => {\n\n  const taskIndex = this.state.tasks.findIndex(task => {\n    return task.id === taskId;\n  });\n\n  const task = { ...this.state.tasks[taskId] };\n  \n\n}\n\n\ndeleteTaskHandler = (taskIndex) => {\n  const taskListCopy = [...this.state.tasks];\n  taskListCopy.splice(taskIndex, 1);\n\n  this.setState(\n    {\n      tasks: taskListCopy,\n    }\n  )\n\n}\n\n  render() {\n\n    let taskList = null;\n\n    if (this.state.tasks) {\n\n      taskList = (\n        <div>\n          {\n            this.state.tasks.map((task, index) => {\n              return <Todo click={() => this.deleteTaskHandler(index)} key={task.id} task={task.task} assignedDate={task.assignedDate} dueDate={task.dueDate}></Todo>\n            })}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Simple React To-do List</h1>\n        {taskList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["46","47"],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\reportWebVitals.js",[],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\hoc\\Auxillary\\Auxillary.js",[],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\Toolbar\\Toolbar.js",[],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\ToDoList.js",["48"],"import React, { Component } from 'react';\r\nimport classes from './ToDoList.module.css';\r\nimport TaskList from './TaskList/TaskList';\r\n\r\nclass ToDoList extends Component {\r\n\r\n    state = {\r\n        newTaskInput: '',\r\n        taskList: [],\r\n        taskIDTotal: 0,\r\n    }\r\n\r\n    addTask = () => {\r\n\r\n        console.log('Outputting new task.')\r\n        \r\n        if (this.state.newTaskInput === '') {\r\n\r\n        }\r\n        else {\r\n        console.log('taskIDTotal: ' + this.state.taskIDTotal);\r\n        const newTask = {\r\n            taskText: this.state.newTaskInput,\r\n            taskID: (this.state.taskIDTotal + 1), \r\n        }\r\n\r\n        \r\n        \r\n\r\n        let newTaskList = [...this.state.taskList];\r\n        newTaskList.push(newTask);\r\n        this.setState(\r\n            {\r\n                taskList: newTaskList,\r\n                taskIDTotal: (this.state.taskIDTotal + 1), \r\n            }\r\n        );  \r\n    }  \r\n    \r\n}\r\n\r\n    removeTask = (taskID) => {\r\n        console.log('Deleting Task');\r\n        let removeIndex = null;\r\n        let copyOfTaskArray = [...this.state.taskList];\r\n        let correctedID = parseInt(taskID) + 1;\r\n\r\n        let foundIndex = copyOfTaskArray.findIndex((taskElement) => {\r\n            return taskElement.taskID === correctedID;\r\n        });\r\n        \r\n       /* let taskToDelete = copyOfTaskArray.find((task, index) => {\r\n            console.log('----------------------------------');\r\n            \r\n            console.log('Corrected ID Passed from ToDo Component: ' + correctedID);\r\n            console.log('Comparison ID from array:' + task.taskID);\r\n            console.log('Do they equal: ' + (correctedID === parseInt(task.taskID)));\r\n            console.log('----------------------------------');\r\n            if(task.taskID === correctedID) {\r\n                console.log('got in the boolean statement');\r\n               \r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            } */\r\n\r\n            copyOfTaskArray.splice(foundIndex, 1);\r\n\r\n            this.setState({\r\n                taskList: copyOfTaskArray\r\n            });\r\n\r\n    }\r\n\r\n    updateTask = (event) => {\r\n        this.setState(\r\n            {\r\n                newTaskInput: event.target.value\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.ToDoList}>\r\n            <div>\r\n            <h1 className={classes.Title}>To Do List</h1>\r\n            <div className={classes.InputFormSpace}>\r\n            <h3>Next thing to do: </h3>\r\n            <input onChange={this.updateTask} name=\"inputText\" className={classes.InputControlText} type=\"text\" />\r\n            <button onClick={this.addTask} className={classes.InputControlButton}>Add Task</button>\r\n            </div>\r\n            <TaskList clicked={this.removeTask} tasks={this.state.taskList} /> \r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default ToDoList;","C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\TaskList\\TaskList.js",[],"C:\\Users\\markf\\Programming\\js\\practice\\simple-task-list\\simple-task-list\\src\\components\\ToDoList\\todo\\Todo.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":19,"column":9,"nodeType":"55","messageId":"56","endLine":19,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":23,"column":9,"nodeType":"55","messageId":"56","endLine":23,"endColumn":13},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","severity":1,"message":"60","line":44,"column":13,"nodeType":"55","messageId":"56","endLine":44,"endColumn":24},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'taskIndex' is assigned a value but never used.","Identifier","unusedVar","'task' is assigned a value but never used.",["61"],["62"],"'removeIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]